install.packages(c("mgcv", "survival"))
A_Energy_Mapping/DRH/Analysis/map")
require(sp)  #[2]
require(maptools)
library(RColorBrewer)
library(classInt)     # finds class intervals for continuous variables
library(plotrix)
library(sp)
library(data.table)
library(rgdal)
library(grid)
library(ggplot2)
methods(fortify)
library( maps)
library(mapproj)
library(plyr)
library(ineq)
library("colorspace")
#pal <- choose_palette()
#states <- map_datac("state")
counties <- map_data("county", "california")
county_df <- map_data('county')  #mappings of counties by state
ca <- subset(county_df, region=="california")   #subset just for caS
ca$county <- ca$subregion
cnames <- aggregate(cbind(long, lat) ~ subregion, data=ca, FUN=mean)
# Use the map function to get the polygon data, then find the centroids
county_poly <- map("county", "california", plot=FALSE, fill = TRUE)
county_centroids <- maps:::apply.polygon(county_poly, maps:::centroid.polygon)
# Create a data frame for graphing out of the centroids of each polygon
# with a non-missing name, since these are the major county polygons.
county_centroids <- county_centroids[!is.na(names(county_centroids))]
centroid_array <- Reduce(rbind, county_centroids)
dimnames(centroid_array) <- list(gsub("[^,]*,", "", names(county_centroids)), c("long", "lat"))
label_df <- as.data.frame(centroid_array)
label_df$county <- rownames(label_df)
# region	County
# pop	Population_2015
# gcp	gcp in millions
# pipc	Per_Capita_Personal_Income_($)_2014
# con	Energy Total_Consumption_(millions_kwh)_2014
# cMbtu	Total_Consumption_per_Capita_(million_Btu)_2013
# resMkWh	Residential_Consumption_(millions_kwh)_2014
# comMkWh	Non-Residential_Consumption_(millions_kwh)_2014
# gconMkWh	Natural_Gas_Consumption_(millions_kwh)_2014
# petrol Gasoline demand by county
states <- map_data("state")
state.data <- read.csv("Data/state_all.csv")
TE.data <- read.csv("Data/te_states.csv")
#Mwh <- state.data[,"terg"]
CPrice <- 20 #Social Cost of Carbon
EPrice <- 25 #Average energy price
ErgExpCal <- state.data[5,"terg"] # total energy expenditure from state data
MWhCal <- 1e6*state.data[5,"TWh"] # total energy use from state data
GHGCal <- 1e6*state.data[5,"ghg"] # total ghg emisisons from state data (353MMT in)
BtuCal <- 1000*TE.data[5,"TETCB"] # total energy use in millions of Btu
APBtu <- TE.data[5,"TETCD"] # Total energy average price -	Dollars per million Btu
GasTBtu <- 1005
data <- read.csv("Data/counties.csv")
names(data) <- tolower(names(data))
#gcp <- (data[,"subregion"],data[,"gcp"])
#print(sum(gcp))
dem.data <- read.csv("Data/County_Demand.csv")
xp.data <- subset(dem.data, select=c("subregion","source","commodity","final.demand","value"), dem.data$final.demand == "output")
hd.data <- subset(dem.data, select=c("subregion","source","commodity","final.demand","value"), dem.data$final.demand == "hh")
sd.data <- subset(dem.data, select=c("subregion","source","commodity","final.demand","value"), dem.data$final.demand == "sec")
#cd.data <- subset(dem.data, select=c("subregion","source","commodity","final.demand","value"), dem.data$final.demand ==c("sec","hh","gov","inv"))
#dd.data <- aggregate(cd.data[,"value"], by=list(cd.data[,"subregion"],cd.data[,"commodity"]), sum)
dem.data <- subset(dem.data,dem.data$final.demand!="output")
dem.data <- subset(dem.data,dem.data$final.demand!="exp")
dem.data <- subset(dem.data,dem.data$final.demand!="sec")
emit.data <- read.csv("Data/Sector_Emission.csv")
#emit_df <- merge(counties, emit.data[,"ghg_total"], sort = FALSE, by = "subregion")
#emit_df <- emit_df[order(emit_df$order), ]
ghg <- subset(emit.data, select=c("commodity", "ghg_total")) #GHG Emission factor by sector in metric tons CO2e per million dollars
edem.data <- merge(dem.data,emit.data, by="commodity")
edem.data <- subset(edem.data,edem.data$ierg == "1")
hedem.data <- subset(edem.data,edem.data$final.demand == "hh")
#xedem.data <- subset(edem.data,edem.data$final.demand == "sec")
ierg <- subset(emit.data, emit.data[,"ierg"] == "1")
#ierg <- emit.data
##Aggregate final demand to commodity and county
xd.agg<-aggregate(dem.data[,"value"], by=list(dem.data[,"subregion"],dem.data[,"commodity"]), sum)
names(xd.agg)[1]<-paste("subregion")
names(xd.agg)[2]<-paste("commodity")
names(xd.agg)[3]<-paste("comxd")
test <- merge(xd.agg, ghg, by="commodity") #Dom demand and emission factor by 60 commodities
xd.xd<-aggregate(test$comxd, by=list(test[,"subregion"]), sum) #Dom Demand by County - millions
names(xd.xd)[1]<-paste("subregion")
names(xd.xd)[2]<-paste("xdxd")
ghg.xd<-aggregate(test$comxd*test$ghg_total, by=list(test[,"subregion"]), sum) #Total GHG from all sources of Dom demand
names(ghg.xd)[1]<-paste("subregion")
names(ghg.xd)[2]<-paste("ghgxd")
ghg_xd_tot <- sum(ghg.xd$ghgxd)
ghg.xd$ghgxd <- ghg.xd$ghgxd*GHGCal/sum(ghg.xd$ghgxd)
##Aggregate Household demand to commodity and county
hd.agg<-aggregate(hd.data[,"value"], by=list(hd.data[,"subregion"],hd.data[,"commodity"]), sum)
names(hd.agg)[1]<-paste("subregion")
names(hd.agg)[2]<-paste("commodity")
names(hd.agg)[3]<-paste("comhd")
test <- merge(hd.agg, ghg, by="commodity") #HH demand and emission factor by 60 commodities
xd.hd<-aggregate(test$comhd, by=list(test[,"subregion"]), sum)
names(xd.hd)[1]<-paste("subregion")
names(xd.hd)[2]<-paste("xdhd")
ghg.hd<-aggregate(test$comhd*test$ghg_total, by=list(test[,"subregion"]), sum)
names(ghg.hd)[1]<-paste("subregion")
names(ghg.hd)[2]<-paste("ghghd")
HGHGCal <- sum(ghg.hd$ghghd)/ghg_xd_tot #Rescale HH total emissions
ghg.hd$ghghd <- ghg.hd$ghghd*HGHGCal/sum(ghg.hd$ghghd)
##Aggregate energy demand to commodity and county
exd.agg<-aggregate(edem.data[,"value"], by=list(edem.data[,"subregion"],edem.data[,"commodity"]), sum)
names(exd.agg)[1]<-paste("subregion")
names(exd.agg)[2]<-paste("commodity")
names(exd.agg)[3]<-paste("comed")
test <- merge(exd.agg, ghg, by="commodity")
xd.ed<-aggregate(test$comed, by=list(test[,"subregion"]), sum)
names(xd.ed)[1]<-paste("subregion")
names(xd.ed)[2]<-paste("xded")
#Household energy demand to commodity and county
hed.agg<-aggregate(hedem.data[,"value"], by=list(hedem.data[,"subregion"],hedem.data[,"commodity"]), sum)
names(hed.agg)[1]<-paste("subregion")
names(hed.agg)[2]<-paste("commodity")
names(hed.agg)[3]<-paste("comhed")
test <- merge(hed.agg, ghg, by="commodity")
xd.hed<-aggregate(test$comhed, by=list(test[,"subregion"]), sum)
names(xd.hed)[1]<-paste("subregion")
names(xd.hed)[2]<-paste("xdhed")
##Aggregate  output to commodity and county
xp.agg<-aggregate(xp.data[,"value"], by=list(xp.data[,"subregion"],xp.data[,"commodity"]), sum)
names(xp.agg)[1]<-paste("subregion")
names(xp.agg)[2]<-paste("commodity")
names(xp.agg)[3]<-paste("comxp")
test <- merge(xp.agg, ghg, by="commodity")
xd.xp<-aggregate(test$comxp, by=list(test[,"subregion"]), sum)
names(xd.xp)[1]<-paste("subregion")
names(xd.xp)[2]<-paste("xdxp")
ghg.xp<-aggregate(test$comxp*test$ghg_total, by=list(test[,"subregion"]), sum)
names(ghg.xp)[1]<-paste("subregion")
names(ghg.xp)[2]<-paste("ghgxp")
ghg.xp$ghgxp <- ghg.xp$ghgxp*GHGCal/sum(ghg.xp$ghgxp)
#Sector energy demand to commodity and county
xed.agg<-aggregate(sd.data[,"value"], by=list(sd.data[,"subregion"],sd.data[,"commodity"]), sum)
names(xed.agg)[1]<-paste("subregion")
names(xed.agg)[2]<-paste("commodity")
names(xed.agg)[3]<-paste("comxed")
test <- merge(xed.agg, ghg, by="commodity")
xd.xed<-aggregate(test$comxed, by=list(test[,"subregion"]), sum)
names(xd.xed)[1]<-paste("subregion")
names(xd.xed)[2]<-paste("xdxed")
dem_df <- merge(xd.agg, ierg, sort = FALSE, by = "commodity")
#Total energy demand by county - attributing raw fuel use to downstream actvivities
exp.dem <- aggregate(dem_df[,"comxd"], by=list(dem_df[,"subregion"]),sum)
names(exp.dem)[1]<-paste("subregion")
names(exp.dem)[2]<-paste("ergxd")
#Normalize to state total energy use
#exp.dem[,"ergxd"] <- ErgExpCal*exp.dem[,"ergxd"]/sum(exp.dem[,"ergxd"])
exp.dem[,"ergxd"] <- APBtu*BtuCal*exp.dem[,"ergxd"]/sum(exp.dem[,"ergxd"])
MWh.dem <- exp.dem
MWh.dem[2]<-MWh.dem[2]*MWhCal/ErgExpCal
names(MWh.dem)[2]<-paste("ergMWh")
Btu.dem <- exp.dem
Btu.dem[,"ergxd"]<-Btu.dem[,"ergxd"]/APBtu
names(Btu.dem)[2]<-paste("ergBtu")
#data <- merge(data, erg.dem, sort = FALSE, by = "subregion")
data <- merge(data, MWh.dem, sort = FALSE, by = "subregion")
data <- merge(data, Btu.dem, sort = FALSE, by = "subregion")
data <- merge(data, xd.xd, sort = FALSE, by = "subregion")
data <- merge(data, ghg.xd, sort = FALSE, by = "subregion")
data <- merge(data, xd.hd, sort = FALSE, by = "subregion")
data <- merge(data, ghg.hd, sort = FALSE, by = "subregion")
data <- merge(data, xd.hed, sort = FALSE, by = "subregion")
data <- merge(data, xd.ed, sort = FALSE, by = "subregion")
#data <- merge(data, ghg.ed, sort = FALSE, by = "subregion")
data <- merge(data, xd.xp, sort = FALSE, by = "subregion")
#data <- merge(data, xp.ed, sort = FALSE, by = "subregion")
data <- merge(data, ghg.xp, sort = FALSE, by = "subregion")
data <- merge(data, xd.xed, sort = FALSE, by = "subregion")
#write.csv(data,file="data.csv")
#Set up map data
map_df <- merge(counties, data, sort = FALSE, by = "subregion")
map_df <- map_df[order(map_df$order), ]
#pal <- choose_palette()
install.packages("rdrop2")
drop_acc
drop_auth()
x<- drop_auth()
drop_auth()
drop_auth(new_user = TRUE)
library(rdrop2)
drop_auth()
drop_acc()
drop_dir()
library
library("googledrive")
install.packages("googledrive")
library("googledrive")
drive_find(n_max = 25)
drive_find(n_max = 25)
library("googledrive")
drive_find(n_max = 25)
googledrive {googledrive}
googledrive
rm()
library("googledrive")
library(googledrive)
drive_find(n_max = 25)
drive_find(n_max = 25)
source('~/.active-rstudio-document', echo=TRUE)
drive_find(pattern = "Data_CA")
drive_find(type = "shp")
drive_find(type = "shape")
drive_find(n_max = 250)
drive_find(pattern = "data")
drive_find(pattern = "poverty")
drive_find(pattern = "poverty")
drive_find(n_max = 250)
drive_find(pattern = "CCPM3")
drive_find(pattern = "Data_CA")
drive_find(pattern = "Bioeconomy")
drive_find(pattern = "DOF")
drive_find(pattern = "GDF")
drive_find(pattern = "asthma")
x$id
(x <- drive_get("~/abc/def"))
x$id
(x <- drive_get("~/GDF Budget Proposal.pdf"))
-----
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
![](Bear.png)
##### Version: November 13th, 2018
---
title: "Opportunity Search"
output:
html_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
source('~/.active-rstudio-document', echo=TRUE)
library(rgdal)
library(ggplot2)
library(rgeos)
library(maptools)
library(grid)
library(gridExtra)
# Set local working directory
setwd("/Users/dwrh1/Dropbox/BioResources/Mapping/DC_Analysis/mapping-project-2/mapping-project")
map.det<- readOGR(dsn="inputs/shapefiles/CH/DATEN/swissBOUNDARIES3D/SHAPEFILE_LV03_LN02", layer="swissBOUNDARIES3D_1_3_TLM_KANTONSGEBIET")
View(map.det)
map.kt <- map.det[map.det$ICC=="CH" & (map.det$OBJECTID %in% c(1:73)),]
head(map.kt)
# Merge polygons by ID
map.test <- unionSpatialPolygons(map.kt, map.kt@data$OBJECTID)
head(map.det)
#map.kt <- map.det[map.det@data$KANTONSNUM=="CH01000000"|map.det@data$KANTONSNUM=="CH19000000",]
map.kt <- map.det[map.det$ICC=="CH" & (map.det$OBJECTID %in% c(1:73)),]
head(map.kt)
View(map.det)
View(map.det)
#map.kt <- map.det[map.det@data$KANTONSNUM=="CH01000000"|map.det@data$KANTONSNUM=="CH19000000",]
map.kt <- map.det[map.det$ICC=="CH" & (map.det$UUID %in% c(1:73)),]
head(map.kt)
#map.kt <- map.det[map.det@data$KANTONSNUM=="CH01000000"|map.det@data$KANTONSNUM=="CH19000000",]
map.kt <- map.det[map.det$ICC=="CH" & (map.det$UUID %in% c(1:51)),]
head(map.kt)
#map.kt <- map.det[map.det@data$KANTONSNUM=="CH01000000"|map.det@data$KANTONSNUM=="CH19000000",]
map.kt <- map.det[map.det$ICC=="CH" & (map.det$UUID %in% c(1:54)),]
head(map.kt)
head(map.kt)
# Load Geographice Mapping data
load("inputs/shapefiles/USA_adm1.RData"); state = gadm; ca_state = state[state@data$NAME_1=="California",]
load("inputs/shapefiles/USA_adm2.RData"); county = gadm; ca_county = county[county@data$NAME_1=="California",]
mex = readRDS("inputs/shapefiles/MEX_adm0.RDS")
load("inputs/shapefiles/CAshape.RData")
View(ca_county)
View(ca_county)
library("tidyverse")
library("tidyxl")
library("ggplot2")
library("scatterpie")
# Set local working directory
setwd("/Users/dwrh1/Dropbox/BioResources/Mapping/DC_Analysis/mapping-project-2/mapping-project")
# Load Geographice Mapping data
communes <- readOGR("inputs/shapefiles/LUX/LIMADM_COMMUNES.shp")
communes_df <- readRDS("commune_shapefile.rds")
communes_df <- communes
head(communes_df)
ggplot() +
geom_polygon(data = communes_df, aes(x = long, y = lat, group = commune), colour = "grey", fill = NA) #+
ggplot() +
geom_polygon(data = communes_df, aes(x = long, y = lat, group = COMMUNE), colour = "grey", fill = NA) #+
ggplot() +
geom_polygon(data = communes_df, aes(x = long, y = lat, group = "COMMUNE"), colour = "grey", fill = NA) #+
library(tidyverse); library(maptools); library(sp); library(XML); library(rgdal); library(Hmisc); library(classInt); library(plotrix);library(RColorBrewer);
install.packages("tidyverse")
install.packages("maptools"); install.packages("sp"); install.packages("XML"); install.packages("rgdal"); install.packages("Hmisc"); install.packages("classInt"); install.packages("plotrix");install.packages("RColorBrewer");
install.packages("fields")
install.packages("sf")
install.packages("reshape")
library(tidyverse); library(maptools); library(sp); library(XML); library(rgdal); library(Hmisc); library(classInt); library(plotrix);library(RColorBrewer);
library(fields)
library(sf)
library(rgeos)
install.packages("sf")
install.packages("rgeos")
install.packages("reshape")
library(fields)
library(sf)
install.packages("sf")
library(rgeos)
library(reshape)
# Load NREL Biomass database and extract CA Biomass subset
biomass <- st_read("Inputs/shapefiles/solid-biomass/SolidBiomass.shp")
install.packages("sf")
library(sf)
# Load NREL Biomass database and extract CA Biomass subset
biomass <- st_read("Inputs/shapefiles/solid-biomass/SolidBiomass.shp")
install.packages("st_read")
install.packages("sf")
library(sf)
install.packages("sf")
library(sf)
# Load NREL Biomass database and extract CA Biomass subset
biomass <- st_read("Inputs/shapefiles/solid-biomass/SolidBiomass.shp")
getwd()
setwd("~/Dropbox(bearecon)/Bioresources-Mapping")
setwd("Dropbox(bearecon)/Bioresources-Mapping")
~/
setwd("~/Dropbox(bearecon)/Bioresources-Mapping")
get wd()
getwd()
setwd("/Users/dwrh1/Dropbox(bearecon)/Bioresources-Mapping")
getwd()
setwd("/Users/dwrh1/Dropbox(bearecon)/Bioresources-Mapping")
source('~/Documents/Research/Models/GIS/CA_Energy_Mapping/DRH/Analysis/map/Counties_BGC.R')
library(ggplot2)
library(gglorenz)
Distr1 <- c( A=137, B=499, C=311, D=173, E=219, F=81)
install.packages("ggplot2")
install.packages("gglorenz")
library(ggplot2)
library(gglorenz)
Distr1 <- c( A=137, B=499, C=311, D=173, E=219, F=81)
x <- data.frame(Distr1)
ggplot(x, aes(Distr1)) +
stat_lorenz() +
geom_abline(color = "grey")
#set wd
setwd("~/Documents/Github/BEAR/Ramesh-Thesis/China-Education-Wages")
#set wd
setwd("Users/dwrh1/Documents/Github/BEAR/Ramesh-Thesis/China-Education-Wages")
#set wd
setwd("/Users/dwrh1/Documents/GitHub/BEAR/Thesis-Ramesh/China-Education-Wages")
library(knitr)
library(xtable)
library(broom)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(stargazer)
library(lubridate)
library(haven)
library(e1071)
library(ggplot2)
library(gglorenz)
data10 = read_dta("./CFPSdata/2010adult.dta")
data10 = filter(data10, !qc1 < 0)
data12 = read_dta("./CFPSdata/2012adult.dta")
data12 = filter(data12, !sch2012 < 0)
data14 = read_dta("./CFPSdata/2014adult.dta")
data14 = filter(data14, !pw1r < 0)
data16 = read.csv("./CFPSdata/Mincer16.csv")
